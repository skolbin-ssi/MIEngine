//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IOSDebugLauncher {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LauncherResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LauncherResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("IOSDebugLauncher.LauncherResources", typeof(LauncherResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot get name from executable path &apos;{0}&apos;..
        /// </summary>
        internal static string BadNameFormat {
            get {
                return ResourceManager.GetString("BadNameFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting to remote device or simulator.
        /// </summary>
        internal static string Connecting {
            get {
                return ResourceManager.GetString("Connecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defining platform and loading executable for debugging.
        /// </summary>
        internal static string DefinePlatform {
            get {
                return ResourceManager.GetString("DefinePlatform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An incorrect response was received from vcremote. Make sure that a compatible vcremote is installed on the remote machine..
        /// </summary>
        internal static string Error_BadJSon {
            get {
                return ResourceManager.GetString("Error_BadJSon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot launch iOS debugging for target engine &apos;{0}&apos;..
        /// </summary>
        internal static string Error_BadTargetEngine {
            get {
                return ResourceManager.GetString("Error_BadTargetEngine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to reach the vcremote server. Make sure that the vcremote server is running and is configured with the same security setting as Visual Studio..
        /// </summary>
        internal static string Error_UnableToReachServer {
            get {
                return ResourceManager.GetString("Error_UnableToReachServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unauthorized Request. Use vcremote to generate a new client certificate and enter the PIN in project properties..
        /// </summary>
        internal static string Error_Unauthorized {
            get {
                return ResourceManager.GetString("Error_Unauthorized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown or unsupported debug target &apos;{0}&apos;..
        /// </summary>
        internal static string Error_UnknownDebugTarget {
            get {
                return ResourceManager.GetString("Error_UnknownDebugTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexecpted failure trying to reach vcremote: {0}.
        /// </summary>
        internal static string Error_VcRemoteUnknown {
            get {
                return ResourceManager.GetString("Error_VcRemoteUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Obtaining information from vcremote..
        /// </summary>
        internal static string Info_GettingInfo {
            get {
                return ResourceManager.GetString("Info_GettingInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting Remote Debug Listener..
        /// </summary>
        internal static string Info_StartingDebugListener {
            get {
                return ResourceManager.GetString("Info_StartingDebugListener", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting initial breakpoint.
        /// </summary>
        internal static string SettingBreakpoint {
            get {
                return ResourceManager.GetString("SettingBreakpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for application to launch. Please (re)start application &apos;{0}&apos; in the simulator..
        /// </summary>
        internal static string WaitingForApp {
            get {
                return ResourceManager.GetString("WaitingForApp", resourceCulture);
            }
        }
    }
}
