//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AndroidDebugLauncher {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LauncherResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LauncherResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AndroidDebugLauncher.LauncherResources", typeof(LauncherResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current Android NDK root is set to an NDK for platform &apos;Windows 64-bit&apos;. Platform &apos;Windows 64-bit&apos; NDKs do not support x86 debugging. Specify a 32-bit NDK for platform &apos;Windows 32-bit&apos; instead. This can be obtained from developer.android.com..
        /// </summary>
        internal static string Error_64BitNDKNotSupportedForX86 {
            get {
                return ResourceManager.GetString("Error_64BitNDKNotSupportedForX86", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Android command &apos;{0}&apos; failed to execute..
        /// </summary>
        internal static string Error_AdbShellFailure {
            get {
                return ResourceManager.GetString("Error_AdbShellFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incompatible device CPU architecture detected. The debugger is configured for {0} debugging. But the configured device/emulator &apos;{1}&apos; is using {2} ABI..
        /// </summary>
        internal static string Error_BadDeviceAbi {
            get {
                return ResourceManager.GetString("Error_BadDeviceAbi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to connect to the device/emulator through the Android Debug Bridge (adb). If the problem continues, try restarting the device/emulator or resetting adb..
        /// </summary>
        internal static string Error_DeviceNotResponding {
            get {
                return ResourceManager.GetString("Error_DeviceNotResponding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target device or emulator is offline..
        /// </summary>
        internal static string Error_DeviceOffline {
            get {
                return ResourceManager.GetString("Error_DeviceOffline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} file &apos;{1}&apos;, could not be found in the expected location of &apos;{2}&apos;. Ensure that a compatible {0} is installed..
        /// </summary>
        internal static string Error_ExternalFileNotFound {
            get {
                return ResourceManager.GetString("Error_ExternalFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GDBServer failed to start or attach to the target application..
        /// </summary>
        internal static string Error_GDBServerFailed {
            get {
                return ResourceManager.GetString("Error_GDBServerFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required Android SDK file, adb.exe, could not be found under the specified Android SDK root &apos;{0}&apos;..
        /// </summary>
        internal static string Error_InvalidAndroidSDK {
            get {
                return ResourceManager.GetString("Error_InvalidAndroidSDK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The format of AndroidLaunchOptions attribute &apos;{0}&apos; is invalid..
        /// </summary>
        internal static string Error_InvalidAttribute {
            get {
                return ResourceManager.GetString("Error_InvalidAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AndroidLaunchOptions attribute &apos;{0}&apos; has an invalid value &apos;{1}&apos;. Directory does not exist or is not rooted..
        /// </summary>
        internal static string Error_InvalidDirectoryAttribute {
            get {
                return ResourceManager.GetString("Error_InvalidDirectoryAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A required Visual Studio registry value could not be found. Ensure that support for multi-device C++ development is enabled in Visual Studio setup.
        ///
        ///Registry key: {0}
        ///Value name: {1}.
        /// </summary>
        internal static string Error_MDDRegValueNotFound {
            get {
                return ResourceManager.GetString("Error_MDDRegValueNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required AndroidLaunchOptions attribute &apos;{0}&apos; is missing..
        /// </summary>
        internal static string Error_MissingAttribute {
            get {
                return ResourceManager.GetString("Error_MissingAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple application processes were found for package &apos;{0}&apos;. Debugging multi-process packages is not currently supported. If the package is not expected to have multiple processes, try restarting the device or emulator..
        /// </summary>
        internal static string Error_MulltipleApplicationProcesses {
            get {
                return ResourceManager.GetString("Error_MulltipleApplicationProcesses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-debuggable application installed on the target device. Required file &apos;{0}&apos; could not be found on the device. Please reinstall the debuggable version..
        /// </summary>
        internal static string Error_NoGdbServer {
            get {
                return ResourceManager.GetString("Error_NoGdbServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package &apos;{0}&apos; did not start on the device or emulator..
        /// </summary>
        internal static string Error_PackageDidNotStart {
            get {
                return ResourceManager.GetString("Error_PackageDidNotStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot Attach. The package &apos;{0}&apos; is not running on the device or emulator..
        /// </summary>
        internal static string Error_PackageIsNotRunning {
            get {
                return ResourceManager.GetString("Error_PackageIsNotRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-debuggable application installed on the target device. Please reinstall the debuggable version..
        /// </summary>
        internal static string Error_RunAsNonDebuggablePackage {
            get {
                return ResourceManager.GetString("Error_RunAsNonDebuggablePackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Troubleshooting steps:
        ///- Try launching the app from the app list. If the app is not in the app list, or cannot be started, this may indicate a problem with the app deployment.
        ///- Make sure that you have installed all updates available for your device.
        ///- Install the latest firmware or flash the device using the latest available image. This can be helpful even if you are already on the latest version of Android as the over-the-air Android upgrade process may corrupt file permissions needed for native debugg [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Error_RunAsUnknownPackage {
            get {
                return ResourceManager.GetString("Error_RunAsUnknownPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected results from running the Android command &apos;{0}&apos;..
        /// </summary>
        internal static string Error_ShellCommandBadResults {
            get {
                return ResourceManager.GetString("Error_ShellCommandBadResults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Android command &apos;{0}&apos; failed. {1}.
        /// </summary>
        internal static string Error_ShellCommandFailed {
            get {
                return ResourceManager.GetString("Error_ShellCommandFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Visual Studio C++ Android debugger requires that the target emulator/device be running Android API level 17 (version 4.2) or newer, but the target emulator/device is running API level {0}. Please update your emulator/device..
        /// </summary>
        internal static string Error_UnsupportedAPILevel {
            get {
                return ResourceManager.GetString("Error_UnsupportedAPILevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Java Development Kit.
        /// </summary>
        internal static string ProductName_JDK {
            get {
                return ResourceManager.GetString("ProductName_JDK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Android NDK.
        /// </summary>
        internal static string ProductName_NDK {
            get {
                return ResourceManager.GetString("ProductName_NDK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Android SDK.
        /// </summary>
        internal static string ProductName_SDK {
            get {
                return ResourceManager.GetString("ProductName_SDK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting to the Android device or emulator..
        /// </summary>
        internal static string Step_ConnectToDevice {
            get {
                return ResourceManager.GetString("Step_ConnectToDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading files from the device or emulator..
        /// </summary>
        internal static string Step_DownloadingFiles {
            get {
                return ResourceManager.GetString("Step_DownloadingFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting the Android application Process ID..
        /// </summary>
        internal static string Step_GettingAppProcessId {
            get {
                return ResourceManager.GetString("Step_GettingAppProcessId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inspecting properties of the device or emulator..
        /// </summary>
        internal static string Step_InspectingDevice {
            get {
                return ResourceManager.GetString("Step_InspectingDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting up the debugger connection to the device or emulator..
        /// </summary>
        internal static string Step_PortForwarding {
            get {
                return ResourceManager.GetString("Step_PortForwarding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resolving paths to external dependencies..
        /// </summary>
        internal static string Step_ResolveInstallPaths {
            get {
                return ResourceManager.GetString("Step_ResolveInstallPaths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting the GDBServer process on the Android device or emulator..
        /// </summary>
        internal static string Step_StartGDBServer {
            get {
                return ResourceManager.GetString("Step_StartGDBServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting the Android application..
        /// </summary>
        internal static string Step_StartingApp {
            get {
                return ResourceManager.GetString("Step_StartingApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for the device or emulator to come online..
        /// </summary>
        internal static string Step_WaitingForDeviceToComeOnline {
            get {
                return ResourceManager.GetString("Step_WaitingForDeviceToComeOnline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target architecture &apos;{0}&apos; is not supported..
        /// </summary>
        internal static string UnsupportedTargetArchitecture {
            get {
                return ResourceManager.GetString("UnsupportedTargetArchitecture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting up Android debugging..
        /// </summary>
        internal static string WaitDialogText {
            get {
                return ResourceManager.GetString("WaitDialogText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to C++ debugging can be unreliable in ARM emulators.  Functionality such as stepping and breakpoints might not work as expected..
        /// </summary>
        internal static string Warning_ArmEmulator {
            get {
                return ResourceManager.GetString("Warning_ArmEmulator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to connect to and resume the Android Java Virtual Machine..
        /// </summary>
        internal static string Warning_JDbgResumeFailure {
            get {
                return ResourceManager.GetString("Warning_JDbgResumeFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This may be because a Java debugger, such as Eclipse, is already connected. Resume the Java debugger or close it..
        /// </summary>
        internal static string Warning_JdbgVMUnavailable {
            get {
                return ResourceManager.GetString("Warning_JdbgVMUnavailable", resourceCulture);
            }
        }
    }
}
